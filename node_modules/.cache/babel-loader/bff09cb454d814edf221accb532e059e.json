{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\law-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css'; //import App from './App';\n\nimport * as serviceWorker from './components/serviceWorker';\nimport { shuffle, sample } from 'underscore';\nimport Playground from './components/Playground.js';\nconst authors = [{\n  name: 'Mark Twain',\n  imageUrl: 'images/authors/marktwain.jpg',\n  imageSource: 'Wikipedia Commons',\n  books: ['The Adventures of Huckelberry Finn']\n}, {\n  name: 'Joseph Conrad',\n  imageUrl: 'images/authors/josephconrad.png',\n  imageSource: 'Wikipedia Commons',\n  books: ['Heart of darkness']\n}, {\n  name: 'J. K. Rowling',\n  imageUrl: 'images/authors/jkrowling.jpg',\n  imageSource: 'Wikipedia Commons',\n  books: ['Harry Potter and the Sorcerers Stone']\n}, {\n  name: 'Stephen King',\n  imageUrl: 'images/authors/stephenking.jpg',\n  imageSource: 'Wikipedia Commons',\n  books: ['The Shining', 'IT']\n}, {\n  name: 'Charles Dickens',\n  imageUrl: 'images/authors/charlesdickens.jpg',\n  imageSource: 'Wikipedia Commons',\n  books: ['David Copperfield', 'A Tale of Two Cities']\n}, {\n  name: 'William Shakespeare',\n  imageUrl: 'images/authors/williamshakespeare.jpg',\n  imageSource: 'Wikipedia Commons',\n  books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n}];\n\nfunction getTurnData(authors) {\n  const allBooks = authors.reduce((p, c, i) => {\n    return p.concat(c.books);\n  }, []);\n  const fourRandomBooks = shuffle(allBooks).slice(0, 4);\n  const answer = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    author: authors.find(author => author.books.some(title => title === answer))\n  };\n}\n/*const state = {\n    turnData: getTurnData(authors)\n};*/\n\n\nfunction render() {\n  //ReactDOM.render(<App {...state}/>, document.getElementById('root'));\n  ReactDOM.render(React.createElement(Playground, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), document.getElementById('root'));\n}\n\nrender();\nserviceWorker.register();","map":{"version":3,"sources":["C:\\Projects\\law-app\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","shuffle","sample","Playground","authors","name","imageUrl","imageSource","books","getTurnData","allBooks","reduce","p","c","i","concat","fourRandomBooks","slice","answer","author","find","some","title","render","document","getElementById","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AACA,SAAQC,OAAR,EAAiBC,MAAjB,QAA8B,YAA9B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,IAAI,EAAE,YADV;AAEIC,EAAAA,QAAQ,EAAE,8BAFd;AAGIC,EAAAA,WAAW,EAAE,mBAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,oCAAD;AAJX,CADY,EAOZ;AACIH,EAAAA,IAAI,EAAE,eADV;AAEIC,EAAAA,QAAQ,EAAE,iCAFd;AAGIC,EAAAA,WAAW,EAAE,mBAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,mBAAD;AAJX,CAPY,EAaZ;AACIH,EAAAA,IAAI,EAAE,eADV;AAEIC,EAAAA,QAAQ,EAAE,8BAFd;AAGIC,EAAAA,WAAW,EAAE,mBAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,sCAAD;AAJX,CAbY,EAmBZ;AACIH,EAAAA,IAAI,EAAE,cADV;AAEIC,EAAAA,QAAQ,EAAE,gCAFd;AAGIC,EAAAA,WAAW,EAAE,mBAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,IAAhB;AAJX,CAnBY,EAyBZ;AACIH,EAAAA,IAAI,EAAE,iBADV;AAEIC,EAAAA,QAAQ,EAAE,mCAFd;AAGIC,EAAAA,WAAW,EAAE,mBAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,mBAAD,EAAsB,sBAAtB;AAJX,CAzBY,EA+BZ;AACIH,EAAAA,IAAI,EAAE,qBADV;AAEIC,EAAAA,QAAQ,EAAE,uCAFd;AAGIC,EAAAA,WAAW,EAAE,mBAHjB;AAIIC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,kBAAtB;AAJX,CA/BY,CAAhB;;AAuCA,SAASC,WAAT,CAAqBL,OAArB,EAA6B;AACzB,QAAMM,QAAQ,GAAGN,OAAO,CAACO,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACzC,WAAOF,CAAC,CAACG,MAAF,CAASF,CAAC,CAACL,KAAX,CAAP;AACH,GAFgB,EAEd,EAFc,CAAjB;AAGA,QAAMQ,eAAe,GAAGf,OAAO,CAACS,QAAD,CAAP,CAAkBO,KAAlB,CAAwB,CAAxB,EAA0B,CAA1B,CAAxB;AACA,QAAMC,MAAM,GAAGhB,MAAM,CAACc,eAAD,CAArB;AACA,SAAO;AACHR,IAAAA,KAAK,EAAEQ,eADJ;AAEHG,IAAAA,MAAM,EAAEf,OAAO,CAACgB,IAAR,CAAcD,MAAD,IAAYA,MAAM,CAACX,KAAP,CAAaa,IAAb,CAAmBC,KAAD,IAAWA,KAAK,KAAKJ,MAAvC,CAAzB;AAFL,GAAP;AAIH;AAED;;;;;AAIA,SAASK,MAAT,GAAiB;AACb;AACAxB,EAAAA,QAAQ,CAACwB,MAAT,CAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACH;;AACDF,MAAM;AACNvB,aAAa,CAAC0B,QAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\n//import App from './App';\nimport * as serviceWorker from './components/serviceWorker';\nimport {shuffle, sample} from 'underscore';\nimport Playground from './components/Playground.js'\n\nconst authors = [\n    {\n        name: 'Mark Twain',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource: 'Wikipedia Commons',\n        books: ['The Adventures of Huckelberry Finn']\n    },\n    {\n        name: 'Joseph Conrad',\n        imageUrl: 'images/authors/josephconrad.png',\n        imageSource: 'Wikipedia Commons',\n        books: ['Heart of darkness']\n    },\n    {\n        name: 'J. K. Rowling',\n        imageUrl: 'images/authors/jkrowling.jpg',\n        imageSource: 'Wikipedia Commons',\n        books: ['Harry Potter and the Sorcerers Stone']\n    },\n    {\n        name: 'Stephen King',\n        imageUrl: 'images/authors/stephenking.jpg',\n        imageSource: 'Wikipedia Commons',\n        books: ['The Shining', 'IT']\n    },\n    {\n        name: 'Charles Dickens',\n        imageUrl: 'images/authors/charlesdickens.jpg',\n        imageSource: 'Wikipedia Commons',\n        books: ['David Copperfield', 'A Tale of Two Cities']\n    },\n    {\n        name: 'William Shakespeare',\n        imageUrl: 'images/authors/williamshakespeare.jpg',\n        imageSource: 'Wikipedia Commons',\n        books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n    }\n];\n\nfunction getTurnData(authors){\n    const allBooks = authors.reduce((p, c, i) => {\n        return p.concat(c.books)\n    }, [])\n    const fourRandomBooks = shuffle(allBooks).slice(0,4)\n    const answer = sample(fourRandomBooks)\n    return {\n        books: fourRandomBooks,\n        author: authors.find((author) => author.books.some((title) => title === answer))\n    }\n}\n\n/*const state = {\n    turnData: getTurnData(authors)\n};*/\n\nfunction render(){\n    //ReactDOM.render(<App {...state}/>, document.getElementById('root'));\n    ReactDOM.render(<Playground />, document.getElementById('root'));\n}\nrender();\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}